#parse("ActionScript File Header.as")
package ${PACKAGE_NAME}#if (${PACKAGE_NAME} && ${PACKAGE_NAME} != "") #end{
import org.puremvc.as3.interfaces.IMediator;
import org.puremvc.as3.interfaces.INotification;
import com.game.common.mvc.BaseMediator;

${Access_modifier} class ${NAME} extends BaseMediator implements IMediator{
    public static const NAME:String = "${NAME}";

    private function get view(){
        return  getViewComponent();
    };
    public function ${NAME}(__viewComponent:Object=null) {
        super (NAME,__viewComponent);
    }

    override public function onRegister():void {
        super.onRegister(); 
        view.onCompleteSignal.getSignal(this).listen(instanceCompleteHander);
    }

    private function instanceCompleteHander():void {
        //view.buySignal.getSignal(this).listen(doBuy);
        //packProxy = facade.retrieveProxy(PackProxy.NAME) as PackProxy;
        //view.setHasNum(packProxy);
    }

    override public function onRemove():void {
        super.onRemove();
    }

    override public function listNotificationInterests():Array {
        return [ 
        ];
    }

    override public function handleNotification(notification:INotification):void {
        var name:String = notification.getName();
        var body:Object = notification.getBody();

        switch ( name )
        {
            case "":
                break;          
        }
    }
}
}